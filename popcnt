#!/usr/bin/perl -w
#
# popcnt - count the population of chars on stdin
#
# @(#) $Revision: 1.2 $
# @(#) $Id: popcnt,v 1.2 2004/05/21 15:30:25 chongo Exp $
# @(#) $Source: /usr/local/src/bin/popcnt/RCS/popcnt,v $
#
# Copyright (c) 2003 by Landon Curt Noll.  All Rights Reserved.
#
# Permission to use, copy, modify, and distribute this software and
# its documentation for any purpose and without fee is hereby granted,
# provided that the above copyright, this permission notice and text
# this comment, and the disclaimer below appear in all of the following:
#
#       supporting documentation
#       source copies
#       source works derived from this source
#       binaries derived from this source or from derived source
#
# LANDON CURT NOLL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO
# EVENT SHALL LANDON CURT NOLL BE LIABLE FOR ANY SPECIAL, INDIRECT OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
# USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# chongo (Landon Curt Noll, http://www.isthe.com/chongo/index.html) /\oo/\
#
# Share and enjoy! :-)

# requirements
#
use strict;
use bytes;
use POSIX;

my $line;	# most recent input line
my %tally;	# character tally count
my $char;	# char to tally


# process all lines
#
while (defined($line = <>)) {

    # tally each char
    #
    foreach $char (split(//, $line)) {
	++$tally{$char};
    }
}

# print tally
#
foreach $char (sort keys %tally) {
    if ($char =~ /[[:print:]]/ && $char !~ /[[:space:]]/) {
	print "$char\t$tally{$char}\n";
    } else {
	printf("0x%02x\t%d\n", ord($char), $tally{$char});
    }
}
exit(0);
